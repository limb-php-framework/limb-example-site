DROP TABLE IF EXISTS `class_name`;
CREATE TABLE `class_name` (
  `id` int(11) NOT NULL auto_increment,
  `title` varchar(255) character set utf8 collate utf8_bin default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
INSERT INTO `class_name` (`id`, `title`) VALUES (1,'document');
INSERT INTO `class_name` (`id`, `title`) VALUES (2,'Document');
INSERT INTO `class_name` (`id`, `title`) VALUES (3,'image_folder');
INSERT INTO `class_name` (`id`, `title`) VALUES (4,'image');
INSERT INTO `class_name` (`id`, `title`) VALUES (5,'Image');
DROP TABLE IF EXISTS `document`;
CREATE TABLE `document` (
  `id` bigint(20) NOT NULL auto_increment,
  `annotation` text,
  `content` longtext,
  `is_published` tinyint(1) default '0',
  `node_id` bigint(20) default NULL,
  `author_id` bigint(20) default NULL,
  PRIMARY KEY  (`id`),
  KEY `node_id` (`node_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
INSERT INTO `document` (`id`, `annotation`, `content`, `is_published`, `node_id`, `author_id`) VALUES (1,'','<img width=\"513\" height=\"130\" class=\"limb_title\" src=\"/images/title/limb3_info.gif\" alt=\"LIMB3 - Web Application Framework\" />\r\n<div id=\"limb_info\">\r\n<h1>What is Limb?</h1>\r\n<p>Limb is a PHP5 Web Application Framework built with the best agile development practices. We are committed proponents of beautiful and easy-to-maintain code that simply works. That is why we constantly refactor our code in a test driven manner and apply design patterns.</p>\r\n<p>We are pushing PHP to the limits in order to prove that it is possible to write fascinating code regardless of the development platform.</p>\r\n<p>We also believe in sharing and OpenSource, that is why Limb is absolutely free, there is no hidden catch or anything like that. You are free to use it any way you like it. </p>\r\n<a href=\"/about\">more...</a><br />\r\n</div>',0,1,1);
INSERT INTO `document` (`id`, `annotation`, `content`, `is_published`, `node_id`, `author_id`) VALUES (2,'','Limb3 is a general PHP5 only Web Application Framework consisting of many packages distributed via <a href=\"http://pear.limb-project.com/\">Limb3 PEAR channel</a>. Here is the list of the most notable packages at the moment:\r\n<ul>\r\n    <li> <a href=\"http://pear.limb-project.com/core\">core</a>: the base package which provides lazy loading of PHP code </li>\r\n    <li> <a href=\"http://pear.limb-project.com/classkit\">classkit</a>: advanced OO tools(automatic decorators genarators, transparent object proxies, etc) </li>\r\n    <li> <a href=\"http://pear.limb-project.com/toolkit\">toolkit</a>: dependency injection tools </li>\r\n    <li> <a href=\"http://pear.limb-project.com/filter_chain\">filter_chain</a>: InterceptingFilter design pattern implementation </li>\r\n    <li> <a href=\"http://pear.limb-project.com/wact\">wact</a>: a forked and a bit patched version of brilliant template <a href=\"http://phpwact.org\">WACT</a> subsystem </li>\r\n    <li> <a href=\"http://pear.limb-project.com/web_app\">web_app</a>: FrontController and MVC patterns implementation. </li>\r\n    <li> <a href=\"http://pear.limb-project.com/active_record\">active_record</a>: ActiveRecord pattern implementation(<a href=\"http://rubyonrails.com\">Rails</a> alike flavour) </li>\r\n    <li> <a href=\"http://pear.limb-project.com/dbal\">dbal</a>: Database Abstraction Layer which supports MySql, PostreSQL and Oracle at the moment.</li>\r\n    <li> <a href=\"http://pear.limb-project.com/tests_runner\">tests_runner</a>: unit testing tools built around excellent <a href=\"http://www.phpwact.org/php/simple_test\">SimpleTest</a> library </li>\r\n    <li> <a href=\"http://pear.limb-project.com/session\">session</a>: transparent PHP session wrappers with painless persistence of objects </li>\r\n   <li> see more packages on <a href=\'http://pear.limb-project.com\'>Limb3 PEAR channel</a>\r\n</ul>',0,2,1);
INSERT INTO `document` (`id`, `annotation`, `content`, `is_published`, `node_id`, `author_id`) VALUES (3,'','<p>The main aim of Limb2 is to build easy-to-update Content Mangement Systems(CMS). Limb2 uses the following simple metaphor: &quot;Every piece of information is an object&quot;. Every object has set of actions that user can perform, like display, edit, delete etc.</p>\r\n<p> Limb2 uses internal access system to determine if the user is allowed to perform action or not. This access system is suitable for creating flexible access rules and maintaining documents flow. </p>\r\n<p>Limb2 offers user friendly interface to add/update information on the website. The administrator can use either back office to add/edit/delete information or manage information from the front using JIP (just in place) managing feature. JIP create/edit/delete modes allow to dramatically decrease the time of learning the CMS and simplify the administration routine.</p>\r\n<p>Please note, however, that Limb2 development is almost frozen today since the core dev. team is mostly focused on <a href=\"/limb3\">Limb3</a>. Someday Limb2 will be a simply package of the more general Limb3 framework.</p>',0,3,1);
INSERT INTO `document` (`id`, `annotation`, `content`, `is_published`, `node_id`, `author_id`) VALUES (4,'','<h2>Browse Limb respository on the web</h2>\r\n<p>If you don\'t want to check out the working copy you can alternatively simply browse the Limb repository using <a href=\"https://svn.limb-project.com/limb/\">Apache built-in viewer</a> </p>\r\n<p> <img vspace=\"0\" hspace=\"0\" alt=\"\" limb_attributes=\"354:thumbnail:original\" src=\"http://limb-project.com/root?node_id=354&amp;thumbnail\" ilo-full-src=\"http://limb-project.com/root?node_id=354&amp;thumbnail\" /><br />\r\n</p>\r\n<p>If you want to have a complete repository tracking tool at your hands try <a href=\"http://fisheye.limb-project.com\">Limb fisheye</a>, a Java based repository &quot;swiss-army knife&quot;. </p>\r\n<h2>Anonymous SVN Access</h2>\r\n<p>The latest working copy of Limb3 can be checked out through anonymous account with the following command.    </p>\r\n<pre>svn co https://svn.limb-project.com/limb/3.x/limb <br /></pre>\r\n<p>This command will checkout all trunk versions of Limb3 packages. </p>\r\n<div class=\"note\">\r\n<p><a href=\"https://svn.limb-project.com/limb/\">Browse the repository tree</a> before checking it out! If you don\'t want to checkout all available packages. </p>\r\n<p>You shouldn\'t checkout the whole repository since it contains all dev.branches and tags. The current dev. branch of  Limb2 is located in the <strong>/limb/2.x/trunk</strong>, while Limb3 has a bit more complicated repository layout since each package has its own development branch. In order to simplify the checkout procedure all trunk versions of Limb3 packages are stored under \'limb\' directory, e.g. <span style=\"font-weight: bold;\">/limb/3.x/limb/core</span> </p>\r\n</div>\r\n<p>From time to time we fork branches from the trunk since they\'re very useful for trying some experimental features in isolation from the main development. These branches normally get merged back with the trunk eventually. Limb2 experimental dev. branches are located at <strong>/limb/2.x/branches</strong> and for Limb3 all experimental dev. branches are located in a separate \'branches\' directory, e.g. <strong>/limb/3.x/branches/core-0.1.0</strong>. </p>\r\n<p>Once an official release is made it\'s available as a tag in repository. All official releases(or tags) go to <strong>/limb/2.x/tags</strong> for Limb2 and for Limb3 they go to a separate \'tags\' directory, e.g. <strong>/limb/3.x/tags/core-0.1.0</strong>. \r\n</p>\r\n\r\n<h2>Developer SVN write access via Web DAV</h2>\r\n<p>Only project developers have write access to the LIMB subversion repository using this method. Enter your login and password when prompted during the check-in procedure. <br />\r\n</p>\r\n<div class=\"note\">\r\n<p>If you want to get SVN dev. account and take active part in LIMB development, <a href=\"/support\">contact us</a> please(you can also send your patches and bugfixes, we\'ll give you a proper credit in the CHANGELOG :) )  </p>\r\n</div>',0,4,1);
INSERT INTO `document` (`id`, `annotation`, `content`, `is_published`, `node_id`, `author_id`) VALUES (6,'','<h2>Forum</h2>\r\n<p>The easiest way to get almost immediate feedback from core Limb developers is to ask your question at the <a href=\"/forum\">forum</a>. Don\'t hesitate asking even the most trivial questions and issues - we\'re there to help you.  </p>\r\n<h2>Mailing Lists</h2>\r\n<p>If you prefer posting questions to mailing lists rather than asking on the forum, please consider subscribing to one of the following Limb mailing lists: </p>\r\n<ul>\r\n    <li><a href=\"http://lists.limb-project.com/mailman/listinfo/limb-announce\">limb-announce</a> - Low traffic list: only occasional announcements about Limb releases go here </li>\r\n    <li><a href=\"http://lists.limb-project.com/mailman/listinfo/limb-dev\">limb-dev</a> - Development discussion </li>\r\n    <li><a href=\"http://lists.limb-project.com/mailman/listinfo/limb-issues\">limb-issues</a> - All JIRA issues go to this list </li>\r\n    <li><a href=\"http://lists.limb-project.com/mailman/listinfo/limb-svn\">limb-svn</a> - This list receives automated commit emails from the repository. </li>\r\n    <li><a href=\"http://lists.limb-project.com/mailman/listinfo/limb-users\">limb-users</a> - General Limb usage discussion </li>\r\n</ul>\r\n<h2>JIRA</h2>\r\n<p>To report bugs or request new features, please visit the Limb JIRA <a href=\"http://jira.limb-project.com\">issue tracker</a> which helps us keep all issues nicely organized. </p>',0,6,1);
INSERT INTO `document` (`id`, `annotation`, `content`, `is_published`, `node_id`, `author_id`) VALUES (7,'','<p>Limb is a PHP5 Web Application Framework built with the best agile development practices. We are committed proponents of beautiful and easy-to-maintain code that simply works. That is why we constantly refactor our code in a test driven manner and apply design patterns.</p>\r\n<p>We are pushing PHP to the limits in order to prove that it is possible to write fascinating code regardless of the development platform.</p>\r\n<p>We also believe in sharing and OpenSource, that is why Limb is absolutely free, there is no hidden catch or anything like that. You are free to use it any way you like it. </p>\r\n<p>Limb was initially designed as a PHP Content Management Framework around brilliant <a href=\"http://www.phpwact.org\">WACT</a> template subsystem for rapid development of Content Management Systems with nice GUI but gradually became much more than that. Today we have 2 different versions of Limb being actively developed: Limb3 and Limb2(however we should admit that Limb3 has much higher priority). <br />\r\n</p>\r\n<p><a href=\"/limb3\"><span style=\"font-weight: bold;\">Limb3</span></a> is a general PHP5 only Web Application Framework consisting of many packages distributed via <a href=\"http://pear.limb-project.com\">Limb3 PEAR channel</a>.</p>\r\n<p><a href=\"/limb2\"><span style=\"font-weight: bold;\">Limb2</span></a> is a PHP4 compatible framework for building web sites with rich content which should be updated easily. In acknowledgement of the original approach in 2004 Limb2 got the <a href=\"http://www.zend.com/php5/contest/top_rated.php\">3d place in Zend Contest</a>.Someday good\'n\'old Limb2 version will become simply a package of the Limb3.</p>',0,7,1);
INSERT INTO `document` (`id`, `annotation`, `content`, `is_published`, `node_id`, `author_id`) VALUES (8,'','There\'re several ways to download Limb:<br />\r\n<ul>\r\n    <li>You can find all official Limb3 and Limb2 releases in the <a href=\"http://sourceforge.net/project/showfiles.php?group_id=109345\">releases section</a> on SourceForge. Limb3 releases are archives of the most notable packages bundled together.<br />\r\n    </li>\r\n    <li>You can download Limb3 packages via <a href=\"http://pear.limb-project.com\">PEAR channel</a>. PEAR channel allows you to install packages transparently managing all dependencies for you.</li>\r\n    <li>You can also track and download the cutting edge snapshots of Limb &quot;nigthly&quot; releases from our&nbsp; <a href=\"http://snaps.limb-project.com/\">build server</a>.</li>\r\n</ul>',0,9,1);
INSERT INTO `document` (`id`, `annotation`, `content`, `is_published`, `node_id`, `author_id`) VALUES (9,'','<h2>Getting involved into Limb development</h2>\r\n<p>Limb is in the stage of the constant development. And you can contribute to this project too!  </p>\r\n<p>You can also leave your comments, questions, notes etc in the <a href=\"http://forum.limb-project.com\">forum</a> or one of the <a href=\"http://lists.limb-project.com/mailman/listinfo\">mailing lists</a>. Your feedback is very important for us, it\'s the only way we can know we\'re doing the &quot;right thing&quot;.</p>\r\n<p>If you\'re comfortable enough with the Limb source code you can send us your patches or even apply for a <a href=\"/svn\">Subversion</a> account. We\'re open for any cooperation!<br />\r\n</p>\r\n<h2>Help us spot &amp; fix bugs</h2>\r\n<p>We know there are some bugs in Limb. They just have to be - Limb grew large and requires more developers to maintain it. Report bugs and new RFE using the Limb <a href=\"http://jira.limb-project.com\">issue tracker</a>.  </p>\r\n<h2>Improve documentation</h2>\r\n<p>We can always use better documentation. Currently the user and development guide is written using <a href=\"http://wiki.limb-project.com\">Limb wiki</a>. You can register and contribute whatever you feel is missing or improve the existing content. </p>',0,11,1);
DROP TABLE IF EXISTS `file_object`;
CREATE TABLE `file_object` (
  `id` int(11) NOT NULL auto_increment,
  `file_name` varchar(255) default NULL,
  `mime_type` varchar(100) NOT NULL default '',
  `size` int(10) unsigned default NULL,
  `etag` varchar(32) default NULL,
  `uid` varchar(32) default NULL,
  `node_id` bigint(20) default NULL,
  PRIMARY KEY  (`id`),
  KEY `id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TABLE IF EXISTS `image`;
CREATE TABLE `image` (
  `id` bigint(20) NOT NULL auto_increment,
  `original_id` bigint(20) default NULL,
  `thumbnail_id` bigint(20) default NULL,
  `icon_id` bigint(20) default NULL,
  `node_id` bigint(20) default NULL,
  PRIMARY KEY  (`id`),
  KEY `node_id` (`node_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TABLE IF EXISTS `media`;
CREATE TABLE `media` (
  `uid` varchar(32) NOT NULL default '',
  `file_name` varchar(255) default NULL,
  `mime_type` varchar(100) NOT NULL default '',
  `size` int(10) unsigned default NULL,
  `etag` varchar(32) default NULL,
  `id` int(11) NOT NULL auto_increment,
  PRIMARY KEY  (`id`),
  KEY `uid` (`uid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TABLE IF EXISTS `news`;
CREATE TABLE `news` (
  `id` bigint(20) NOT NULL auto_increment,
  `content` longtext,
  `news_date` int(11) default NULL,
  `modify_date` int(11) default NULL,
  `create_date` int(11) default NULL,
  `is_published` tinyint(1) default NULL,
  `author_id` bigint(20) default NULL,
  `title` varchar(255) default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
INSERT INTO `news` (`id`, `content`, `news_date`, `modify_date`, `create_date`, `is_published`, `author_id`, `title`) VALUES (1,'<p>It\'s 2007! Fill your heart with new hopes, reach out for new opportunities and celebrate the New Year! Cheers!  </p>\r\n<p>The previous 2006 year was really full of exciting events for the core dev.team:  </p>\r\n<p>Firstly we finally <a href=\"http://limb-project.com/root/news/158\">managed to launch</a> the <a href=\"http://pear.limb-project.com/\">Limb3 PEAR channel</a>. We have high hopes for Limb3 and all our future efforts will be mainly focused on further development and improvement of Limb3 packages. We\'re pushing the PHP\'s limits with Limb3 and prove that PHP still can be a powerfull RAD tool despite to much PHP criticizing lately. </p>\r\nSecondly we released <a href=\"http://limb-project.com/root/news/159\">Limb2.4-rc1 stable release</a>(well, almost stable since it\'s a release candidate) after more than one year of silence in this branch. We hope to release Limb2.4 final pretty soon and even though many developers still find Limb2 attractive we\'d like to admit that there won\'t be much development in this branch in the future. The code base of Limb2 is pretty outdated and sometimes ugly, that\'s why we want to convert Limb2 into Limb3 package as soon as possible.',1169090100,NULL,NULL,1,1,'Happy New 2007 Year!!!');
INSERT INTO `news` (`id`, `content`, `news_date`, `modify_date`, `create_date`, `is_published`, `author_id`, `title`) VALUES (2,'<p>After almost a year of hard working we\'re proud to announce the launch of <a href=\"http://pear.limb-project.com\">PEAR channel for Limb3 packages</a>! These packages should greatly simplify the process of developing web applications with PHP. One of the most interesting packages among them is <strong>web_app</strong> which allows you to develop web applications in <a href=\"http://rubyonrails.com\">Rails</a> alike way using similar controllers, pretty flexible ActiveRecord powered model and excellent <a href=\"http://phpwact.org\">WACT</a> based views.  </p>\r\n<p>These are the steps you\'re required to follow in order to install <strong>web_app</strong> package and all its dependencies:  </p>\r\n<pre class=\"code\"># as of this writing PEAR 1.5 is required which is in alpha state<br />$ pear install PEAR-alpha <br />            <br />$ pear channel-discover pear.limb-project.com<br /><br /># we\'re in alpha state too<br />$ pear install limb/web_app-alpha     <br /></pre>\r\n<p>The channel has a bit terse look right now however this is going to be fixed pretty soon. We\'re also working on providing automatic nightly builds of packages right from the repository.  </p>\r\n<p>The english documentation is mostly outdated but we\'re working on this issue as well(we\'re finishing the Russian documentation at the moment). However there are some simple examples in <strong>web_app</strong> package which, hopefully, should help you get started quickly.  </p>\r\n<p>We\'d like to thank all core Limb developers for their great work and dedication to the project. It would never have happened without you guys!  </p>\r\n<p>Let it be a new year present to all PHP agile geeks ;)</p>',1166175900,NULL,NULL,1,1,'Limb3 PEAR channel was officially launched!');
DROP TABLE IF EXISTS `node`;
CREATE TABLE `node` (
  `id` int(11) NOT NULL auto_increment,
  `root_id` int(11) NOT NULL default '0',
  `parent_id` int(11) NOT NULL default '0',
  `priority` int(11) NOT NULL default '0',
  `level` int(11) NOT NULL default '0',
  `identifier` varchar(128) NOT NULL default '',
  `path` varchar(255) NOT NULL default '',
  `children` int(11) NOT NULL default '0',
  `title` varchar(255) NOT NULL default '',
  `controller_id` int(11) NOT NULL default '0',
  `object_class_id` int(11) default NULL,
  `object_id` bigint(20) default NULL,
  `kind` varchar(255) default NULL,
  PRIMARY KEY  (`id`),
  KEY `root_id` (`root_id`),
  KEY `level` (`level`),
  KEY `rlr` (`root_id`),
  KEY `parent_id` (`parent_id`),
  KEY `id` (`id`,`parent_id`),
  KEY `object_id` (`object_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
INSERT INTO `node` (`id`, `root_id`, `parent_id`, `priority`, `level`, `identifier`, `path`, `children`, `title`, `controller_id`, `object_class_id`, `object_id`, `kind`) VALUES (1,1,0,0,1,'home','/1/',0,'Home',1,2,1,'Node');
INSERT INTO `node` (`id`, `root_id`, `parent_id`, `priority`, `level`, `identifier`, `path`, `children`, `title`, `controller_id`, `object_class_id`, `object_id`, `kind`) VALUES (2,2,0,0,1,'limb3','/2/',0,'Limb3',1,2,2,'Node');
INSERT INTO `node` (`id`, `root_id`, `parent_id`, `priority`, `level`, `identifier`, `path`, `children`, `title`, `controller_id`, `object_class_id`, `object_id`, `kind`) VALUES (3,3,0,0,1,'limb2','/3/',0,'Limb2',1,2,3,'Node');
INSERT INTO `node` (`id`, `root_id`, `parent_id`, `priority`, `level`, `identifier`, `path`, `children`, `title`, `controller_id`, `object_class_id`, `object_id`, `kind`) VALUES (4,4,0,0,1,'svn','/4/',0,'Limb Subversion repository',1,2,4,'Node');
INSERT INTO `node` (`id`, `root_id`, `parent_id`, `priority`, `level`, `identifier`, `path`, `children`, `title`, `controller_id`, `object_class_id`, `object_id`, `kind`) VALUES (6,6,0,0,1,'support','/6/',0,'Getting support',1,2,6,'Node');
INSERT INTO `node` (`id`, `root_id`, `parent_id`, `priority`, `level`, `identifier`, `path`, `children`, `title`, `controller_id`, `object_class_id`, `object_id`, `kind`) VALUES (7,7,0,0,1,'about','/7/',0,'About',1,2,7,'Node');
INSERT INTO `node` (`id`, `root_id`, `parent_id`, `priority`, `level`, `identifier`, `path`, `children`, `title`, `controller_id`, `object_class_id`, `object_id`, `kind`) VALUES (9,9,0,0,1,'download','/9/',0,'Download',1,2,8,'Node');
INSERT INTO `node` (`id`, `root_id`, `parent_id`, `priority`, `level`, `identifier`, `path`, `children`, `title`, `controller_id`, `object_class_id`, `object_id`, `kind`) VALUES (11,11,0,0,1,'development','/11/',0,'Limb development',1,2,9,'Node');
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `id` int(11) NOT NULL auto_increment,
  `first_name` varchar(255) default NULL,
  `middle_name` varchar(255) default NULL,
  `last_name` varchar(255) default NULL,
  `login` varchar(255) default NULL,
  `hashed_password` varchar(255) default NULL,
  `email` varchar(255) default NULL,
  PRIMARY KEY  (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
INSERT INTO `user` (`id`, `first_name`, `middle_name`, `last_name`, `login`, `hashed_password`, `email`) VALUES (1,'Bob','','Thorton','bob','098f6bcd4621d373cade4e832627b4f6','bob@dot.com');
